/*
 * Analizador Léxico del Proyecto 1 
 * del Curso Organización y Compiladores 1
 * Primer Semestre 2022
 * Sección B
 * José Rafael Solis Franco
 * 201612344
**/

package org.rafaelsolis.analizadores;
import java_cup.runtime.Symbol;
import org.rafaelsolis.beans.Conjunto;
import org.rafaelsolis.beans.Expresion;
import java.util.LinkedList;

parser code
{:
    /**
     * Listas donde se almacenarán los conjuntos y expresiones que serán
     * analizados después
    */
    private LinkedList<Conjunto> listaConjuntos = new LinkedList<Conjunto>();
    private LinkedList<Expresion> listaExpresiones = new LinkedList<Expresion>();

    /**
     * Método que se llama automáticamente ante algún error sintáctico
    */
    public void syntax_error(Symbol s) {
        System.out.println("Error sintactico en la linea "+s.left
            +" Columna: "+s.right+". No se esperaba este componente: "+s.value+".");
    }

    /**
     * Método que se llama automáticamente ante algún error sintáctico
     * en el que ya no es posible la recuperación de errores
    */
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.out.println("Error sintactico en la linea "+(s.left)+" Columna: " +
            s.right+". Componente "+s.value+" no reconocido.");
    }

    /**
     * Métodos que se llaman para invocar las listas de conjuntos y 
     * expresiones
    */
    public LinkedList<Conjunto> getConjuntos() {
        return listaConjuntos;
    }

    public LinkedList<Expresion> getExpresiones() {
        return listaExpresiones;
    }


:}

terminal String RCONJ;
terminal String PYCOMA, DPUNTOS, LLAVEA, LLAVEC;
terminal String CONCATENACION, DISYUNCION, CKLEENE, CPOSITIVA, CANULABLE;
terminal String ID, ASIGNACION, CONJUNTO, SEPARADOR;
terminal String COMENT_MLINEA, COMENT_ULINEA, CADENA_COMILLAS;

non terminal INICIO, INSTR, COMENTS, DEF_CONJ, DEF_CONJP;
non terminal DEF_EXPR, DEF_EXPRP, PREFIJ, PREFIJP;
non terminal TERMINAL, EVALUA, EVALUAP;

start with INICIO;

INICIO::= LLAVEA INSTR LLAVEC;

INSTR::=
      COMENTS INSTR
    | COMENTS
    | DEF_CONJ
;

COMENTS::=
      COMENT_MLINEA
    | COMENT_ULINEA
;

DEF_CONJ::=
      RCONJ DPUNTOS ID:a ASIGNACION CONJUNTO:b PYCOMA DEF_CONJP {: listaConjuntos.add(new Conjunto(a, b)); :}
;

DEF_CONJP::=
      COMENTS DEF_CONJ
    | COMENTS DEF_EXPR
    | DEF_CONJ
    | DEF_EXPR
;

DEF_EXPR::=
    ID:a ASIGNACION PREFIJ:b PYCOMA DEF_EXPRP {: listaExpresiones.add(new Expresion(a, b)); :}
;

DEF_EXPRP::=
      COMENTS
    | DEF_EXPR
    | SEPARADOR SEPARADOR EVALUA
;

PREFIJ::=
      PREFIJP
    | TERMINAL PREFIJ
    | TERMINAL
;

PREFIJP::=
      CONCATENACION PREFIJ
    | DISYUNCION PREFIJ
    | CKLEENE PREFIJ
    | CPOSITIVA PREFIJ
    | CANULABLE PREFIJ
;

TERMINAL::=
      LLAVEA ID LLAVEC
    | CADENA_COMILLAS
;

EVALUA::= 
      ID DPUNTOS CADENA_COMILLAS PYCOMA EVALUAP
;

EVALUAP::=
      EVALUA
    | COMENTS
;

